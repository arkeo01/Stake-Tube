{
  "contractName": "StakeTube",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "videoId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "tipper",
          "type": "address"
        }
      ],
      "name": "tipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "videoId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "videoAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToTippers",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToVideo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "videoId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "creator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalVideos",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addVideo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_videoId",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"videoId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"tipper\",\"type\":\"address\"}],\"name\":\"tipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"videoId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"videoAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addVideo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToTippers\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToVideo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"videoId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_videoId\",\"type\":\"uint256\"}],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVideos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aniket Parate\",\"details\":\"Current implementation just consists of tipping and distribution of the tips.Later Implementations include: NFTs, Streaming, Bulk transfers\",\"kind\":\"dev\",\"methods\":{\"addVideo(string,string)\":{\"details\":\"Adds Video Details to the blockchainAdd the necessary require statements\",\"params\":{\"_description\":\"Description of Video\",\"_name\":\"Name of Video\"}},\"tip(uint256)\":{\"details\":\"CAUTION Currently it is taking the index of array, to be modified to take video Id\",\"params\":{\"_videoId\":\"Id of the video\"}}},\"stateVariables\":{\"idToTippers\":{\"details\":\"A different mapping is created because if it would have been stored in an array as earlier, then everytime the complete video object would have been needed to be fetched which would be expensive\"}},\"title\":\"Attention economy for videos\",\"version\":1},\"userdoc\":{\"events\":{\"tipped(uint256,address,address)\":{\"notice\":\"Event after the amount is tipped\"},\"videoAdded(uint256,address)\":{\"notice\":\"Event emitted after video is added using addVideo\"}},\"kind\":\"user\",\"methods\":{\"idToTippers(uint256,uint256)\":{\"notice\":\"Mapping from Video id to tippers array\"},\"idToVideo(uint256)\":{\"notice\":\"Mapping from video id to the video struct stored on blockchain\"},\"tip(uint256)\":{\"notice\":\"Function for tipping the creator of the video\"},\"totalVideos()\":{\"notice\":\"total number of videos stored currently.\"}},\"notice\":\"Contract implementing direct and complete payment to the artist as well as adding videos\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/versilio/VERSILIO/Techworks/Blockchain/Stake-Tube/st-artist/contracts/StakeTube.sol\":\"StakeTube\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/versilio/VERSILIO/Techworks/Blockchain/Stake-Tube/st-artist/contracts/StakeTube.sol\":{\"keccak256\":\"0x4ec0baac0920e49dba818fa8bc8fd39e8e9df63ab007224f6dfccdd8823409cc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0354cf8b3879fa4fc01f238fa23508c6fc146ea6fc0b902cbbef40b547ff6585\",\"dweb:/ipfs/QmVsSD1SfQtu4qdrVWVo5xmShYPaNiL1D53SF85CisRgYs\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a6d806100206000396000f3fe60806040526004361061004a5760003560e01c80630dbd9bdc1461004f578063b60bebb9146101ae578063cd544f641461021d578063e230a20814610361578063e8b69bc31461038c575b600080fd5b34801561005b57600080fd5b506101ac6004803603604081101561007257600080fd5b810190808035906020019064010000000081111561008f57600080fd5b8201836020820111156100a157600080fd5b803590602001918460018302840111640100000000831117156100c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561012657600080fd5b82018360208201111561013857600080fd5b8035906020019184600183028401116401000000008311171561015a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103ba565b005b3480156101ba57600080fd5b506101f1600480360360408110156101d157600080fd5b810190808035906020019092919080359060200190929190505050610509565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022957600080fd5b506102566004803603602081101561024057600080fd5b8101908080359060200190929190505050610557565b6040518085815260200180602001806020018473ffffffffffffffffffffffffffffffffffffffff168152602001838103835286818151815260200191508051906020019080838360005b838110156102bc5780820151818401526020810190506102a1565b50505050905090810190601f1680156102e95780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610322578082015181840152602081019050610307565b50505050905090810190601f16801561034f5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561036d57600080fd5b506103766106d7565b6040518082815260200191505060405180910390f35b6103b8600480360360208110156103a257600080fd5b81019080803590602001909291905050506106dd565b005b6000808154809291906001019190505550600080549050600060405180608001604052808381526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681525090508060016000848152602001908152602001600020600082015181600001556020820151816001019080519060200190610446929190610961565b506040820151816002019080519060200190610463929190610961565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f575c04ce1860600eaadeffb7de46bfa696eef7a41f20431cf444a41ede93ebcc8233604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050565b6002602052816000526040600020818154811061052557600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106a75780601f1061067c576101008083540402835291602001916106a7565b820191906000526020600020905b81548152906001019060200180831161068a57829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60005481565b600060016000838152602001908152602001600020905060008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000826000015490506000341161079c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f546865207469702073686f756c64206265206e6f6e2d7a65726f2e000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610a0d602b913960400191505060405180910390fd5b61082a846108ea565b8173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610870573d6000803e3d6000fd5b507fff4e2c4b5b26e1896ee316ccc4b45ebe98440c57e707da4c11c3354727260f72818333604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a150505050565b60026000828152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261099757600085556109de565b82601f106109b057805160ff19168380011785556109de565b828001600101855582156109de579182015b828111156109dd5782518255916020019190600101906109c2565b5b5090506109eb91906109ef565b5090565b5b80821115610a085760008160009055506001016109f0565b509056fe43726561746f72206f662074686520766964656f2063616e6e6f7420746970207468656d73656c76657321a26469706673582212208fa9813bef5be84ad9fa9a3961fb2637fd5abdc935794642b09f34acd07e103964736f6c63430007060033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80630dbd9bdc1461004f578063b60bebb9146101ae578063cd544f641461021d578063e230a20814610361578063e8b69bc31461038c575b600080fd5b34801561005b57600080fd5b506101ac6004803603604081101561007257600080fd5b810190808035906020019064010000000081111561008f57600080fd5b8201836020820111156100a157600080fd5b803590602001918460018302840111640100000000831117156100c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561012657600080fd5b82018360208201111561013857600080fd5b8035906020019184600183028401116401000000008311171561015a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103ba565b005b3480156101ba57600080fd5b506101f1600480360360408110156101d157600080fd5b810190808035906020019092919080359060200190929190505050610509565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022957600080fd5b506102566004803603602081101561024057600080fd5b8101908080359060200190929190505050610557565b6040518085815260200180602001806020018473ffffffffffffffffffffffffffffffffffffffff168152602001838103835286818151815260200191508051906020019080838360005b838110156102bc5780820151818401526020810190506102a1565b50505050905090810190601f1680156102e95780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610322578082015181840152602081019050610307565b50505050905090810190601f16801561034f5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561036d57600080fd5b506103766106d7565b6040518082815260200191505060405180910390f35b6103b8600480360360208110156103a257600080fd5b81019080803590602001909291905050506106dd565b005b6000808154809291906001019190505550600080549050600060405180608001604052808381526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681525090508060016000848152602001908152602001600020600082015181600001556020820151816001019080519060200190610446929190610961565b506040820151816002019080519060200190610463929190610961565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f575c04ce1860600eaadeffb7de46bfa696eef7a41f20431cf444a41ede93ebcc8233604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050565b6002602052816000526040600020818154811061052557600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106a75780601f1061067c576101008083540402835291602001916106a7565b820191906000526020600020905b81548152906001019060200180831161068a57829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60005481565b600060016000838152602001908152602001600020905060008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000826000015490506000341161079c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f546865207469702073686f756c64206265206e6f6e2d7a65726f2e000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610a0d602b913960400191505060405180910390fd5b61082a846108ea565b8173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610870573d6000803e3d6000fd5b507fff4e2c4b5b26e1896ee316ccc4b45ebe98440c57e707da4c11c3354727260f72818333604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a150505050565b60026000828152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261099757600085556109de565b82601f106109b057805160ff19168380011785556109de565b828001600101855582156109de579182015b828111156109dd5782518255916020019190600101906109c2565b5b5090506109eb91906109ef565b5090565b5b80821115610a085760008160009055506001016109f0565b509056fe43726561746f72206f662074686520766964656f2063616e6e6f7420746970207468656d73656c76657321a26469706673582212208fa9813bef5be84ad9fa9a3961fb2637fd5abdc935794642b09f34acd07e103964736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "390:2980:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "390:2980:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1224:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;900:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;791:23;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2567:800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1780:363;1864:11;;:13;;;;;;;;;;;;;1887;1903:11;;1887:27;;1924:18;1945:106;;;;;;;;1964:8;1945:106;;;;1986:5;1945:106;;;;2005:12;1945:106;;;;2031:10;1945:106;;;;;1924:127;;2083:5;2061:9;:19;2071:8;2061:19;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2103:32;2114:8;2124:10;2103:32;;;;;;;;;;;;;;;;;;;;;;;;;;1780:363;;;;:::o;1224:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;900:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;791:23::-;;;;:::o;2567:800::-;2619:21;2643:9;:19;2653:8;2643:19;;;;;;;;;;;2619:43;;2672:23;2698:7;:15;;;;;;;;;;;;2672:41;;2723:14;2740:7;:15;;;2723:32;;2799:1;2787:9;:13;2766:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2900:7;2886:21;;:10;:21;;;;2865:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3121:19;3131:8;3121:9;:19::i;:::-;3280:7;:16;;:27;3297:9;3280:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3322:38;3329:9;3340:7;3349:10;3322:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2567:800;;;;:::o;2266:97::-;2318:11;:21;2330:8;2318:21;;;;;;;;;;;2345:10;2318:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2266:97;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.7.0;\n\n/// @title Attention economy for videos\n/// @author Aniket Parate\n/// @notice Contract implementing direct and complete payment to the artist as well as adding videos\n/// @dev Current implementation just consists of tipping and distribution of the tips.\n/// @dev Later Implementations include: NFTs, Streaming, Bulk transfers\ncontract StakeTube {\n\n    /// @notice Structure for storing videos\n    /// @dev currently ipfs is not implemented, implement using the string ipfsHash\n    struct Video{\n        uint videoId;\n        string name;\n        string description;\n        address payable creator;\n        // TODO: Implement IPFS\n        // string ipfsHash;\n    }\n\n    /// @notice total number of videos stored currently.\n    uint public totalVideos;\n\n    /// @notice Mapping from video id to the video struct stored on blockchain\n    mapping (uint => Video) public idToVideo;\n\n    /// @notice Mapping from Video id to tippers array\n    /// @dev A different mapping is created because if it would have been stored in an array as earlier, \n    /// @dev then everytime the complete video object would have been needed to be fetched which would be expensive\n    mapping (uint => address payable[]) public idToTippers;\n\n    /// @notice Event emitted after video is added using addVideo\n    event videoAdded(\n        uint videoId,\n        address payable creator\n    );\n\n    /// @notice Event after the amount is tipped\n    event tipped(\n        uint videoId,\n        address payable creator,\n        address payable tipper\n    );\n\n    /// @dev Adds Video Details to the blockchain\n    /// @dev Add the necessary require statements\n    /// @param _name Name of Video\n    /// @param _description Description of Video\n    function addVideo(string memory _name, string memory _description) public {\n        totalVideos++;\n        uint _videoId = totalVideos;\n        Video memory video = Video(\n            _videoId,\n            _name,\n            _description,\n            msg.sender\n        );\n        idToVideo[_videoId] = video;\n        emit videoAdded(_videoId, msg.sender);\n\n    }\n\n    /// @notice Adding tipper to the corresponding video with given video Id\n    /// @param _videoId Id of the video\n    function addTipper(uint _videoId) private {\n        idToTippers[_videoId].push(msg.sender);\n    }\n\n    /// @notice Function for tipping the creator of the video\n    /// @param _videoId Id of the video\n    /// @dev CAUTION Currently it is taking the index of array, to be modified to take video Id\n    function tip(uint _videoId) public payable{\n        Video storage myVideo = idToVideo[_videoId];\n        address payable creator = myVideo.creator;\n        uint myVideoId = myVideo.videoId;\n\n        require(\n            msg.value > 0, \n            \"The tip should be non-zero.\"\n        );\n\n        require(\n            msg.sender != creator,\n            \"Creator of the video cannot tip themselves!\"\n        );\n\n        // TODO: Add a require to check the existence of a video\n        // TODO: Require for checking if the tipper exists currently\n        addTipper(_videoId);\n\n        // TODO: Failure condition of the value transfer to be handled\n        // TODO: Distribution function to be implemented.\n        creator.transfer(msg.value);\n        emit tipped(myVideoId, creator, msg.sender);\n    }\n\n}",
  "sourcePath": "/home/versilio/VERSILIO/Techworks/Blockchain/Stake-Tube/st-artist/contracts/StakeTube.sol",
  "ast": {
    "absolutePath": "/home/versilio/VERSILIO/Techworks/Blockchain/Stake-Tube/st-artist/contracts/StakeTube.sol",
    "exportedSymbols": {
      "StakeTube": [
        185
      ]
    },
    "id": 186,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35,
          "nodeType": "StructuredDocumentation",
          "src": "64:326:1",
          "text": "@title Attention economy for videos\n @author Aniket Parate\n @notice Contract implementing direct and complete payment to the artist as well as adding videos\n @dev Current implementation just consists of tipping and distribution of the tips.\n @dev Later Implementations include: NFTs, Streaming, Bulk transfers"
        },
        "fullyImplemented": true,
        "id": 185,
        "linearizedBaseContracts": [
          185
        ],
        "name": "StakeTube",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "StakeTube.Video",
            "id": 44,
            "members": [
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "videoId",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "567:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "567:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "589:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 38,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "610:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 40,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "610:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "creator",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "638:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 42,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Video",
            "nodeType": "StructDefinition",
            "scope": 185,
            "src": "545:183:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 45,
              "nodeType": "StructuredDocumentation",
              "src": "734:52:1",
              "text": "@notice total number of videos stored currently."
            },
            "functionSelector": "e230a208",
            "id": 47,
            "mutability": "mutable",
            "name": "totalVideos",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "791:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "791:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 48,
              "nodeType": "StructuredDocumentation",
              "src": "821:74:1",
              "text": "@notice Mapping from video id to the video struct stored on blockchain"
            },
            "functionSelector": "cd544f64",
            "id": 52,
            "mutability": "mutable",
            "name": "idToVideo",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "900:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Video_$44_storage_$",
              "typeString": "mapping(uint256 => struct StakeTube.Video)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "909:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "900:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Video_$44_storage_$",
                "typeString": "mapping(uint256 => struct StakeTube.Video)"
              },
              "valueType": {
                "id": 50,
                "name": "Video",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 44,
                "src": "917:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                  "typeString": "struct StakeTube.Video"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "947:272:1",
              "text": "@notice Mapping from Video id to tippers array\n @dev A different mapping is created because if it would have been stored in an array as earlier, \n @dev then everytime the complete video object would have been needed to be fetched which would be expensive"
            },
            "functionSelector": "b60bebb9",
            "id": 58,
            "mutability": "mutable",
            "name": "idToTippers",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "1224:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_payable_$dyn_storage_$",
              "typeString": "mapping(uint256 => address payable[])"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 54,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1233:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1224:35:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_payable_$dyn_storage_$",
                "typeString": "mapping(uint256 => address payable[])"
              },
              "valueType": {
                "baseType": {
                  "id": 55,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1241:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "id": 56,
                "nodeType": "ArrayTypeName",
                "src": "1241:17:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                  "typeString": "address payable[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "1285:61:1",
              "text": "@notice Event emitted after video is added using addVideo"
            },
            "id": 65,
            "name": "videoAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "videoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1377:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1399:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1367:61:1"
            },
            "src": "1351:78:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "1435:44:1",
              "text": "@notice Event after the amount is tipped"
            },
            "id": 74,
            "name": "tipped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "videoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1506:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1528:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tipper",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1561:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:93:1"
            },
            "src": "1484:106:1"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1854:289:1",
              "statements": [
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1864:13:1",
                    "subExpression": {
                      "id": 82,
                      "name": "totalVideos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1864:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:13:1"
                },
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "_videoId",
                      "nodeType": "VariableDeclaration",
                      "scope": 111,
                      "src": "1887:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1887:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "id": 87,
                    "name": "totalVideos",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "1903:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1887:27:1"
                },
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "video",
                      "nodeType": "VariableDeclaration",
                      "scope": 111,
                      "src": "1924:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_memory_ptr",
                        "typeString": "struct StakeTube.Video"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "Video",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44,
                        "src": "1924:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                          "typeString": "struct StakeTube.Video"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 92,
                        "name": "_videoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1964:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 93,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1986:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 94,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2005:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2031:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2031:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 91,
                      "name": "Video",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1945:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Video_$44_storage_ptr_$",
                        "typeString": "type(struct StakeTube.Video storage pointer)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Video_$44_memory_ptr",
                      "typeString": "struct StakeTube.Video memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1924:127:1"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 99,
                        "name": "idToVideo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "2061:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Video_$44_storage_$",
                          "typeString": "mapping(uint256 => struct StakeTube.Video storage ref)"
                        }
                      },
                      "id": 101,
                      "indexExpression": {
                        "id": 100,
                        "name": "_videoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2071:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2061:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_storage",
                        "typeString": "struct StakeTube.Video storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "video",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2083:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_memory_ptr",
                        "typeString": "struct StakeTube.Video memory"
                      }
                    },
                    "src": "2061:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Video_$44_storage",
                      "typeString": "struct StakeTube.Video storage ref"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:27:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 106,
                        "name": "_videoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2114:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2124:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2124:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 105,
                      "name": "videoAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2103:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2103:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "EmitStatement",
                  "src": "2098:37:1"
                }
              ]
            },
            "documentation": {
              "id": 75,
              "nodeType": "StructuredDocumentation",
              "src": "1596:179:1",
              "text": "@dev Adds Video Details to the blockchain\n @dev Add the necessary require statements\n @param _name Name of Video\n @param _description Description of Video"
            },
            "functionSelector": "0dbd9bdc",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addVideo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1798:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1819:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1797:49:1"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1854:0:1"
            },
            "scope": 185,
            "src": "1780:363:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2308:55:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2345:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2345:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 118,
                          "name": "idToTippers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "2318:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_payable_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address payable[] storage ref)"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "id": 119,
                          "name": "_videoId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "2330:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2318:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2318:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2318:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2318:38:1"
                }
              ]
            },
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "2149:112:1",
              "text": "@notice Adding tipper to the corresponding video with given video Id\n @param _videoId Id of the video"
            },
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTipper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_videoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2285:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2284:15:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2308:0:1"
            },
            "scope": 185,
            "src": "2266:97:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "2609:758:1",
              "statements": [
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "myVideo",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "2619:21:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                        "typeString": "struct StakeTube.Video"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "Video",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44,
                        "src": "2619:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                          "typeString": "struct StakeTube.Video"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "baseExpression": {
                      "id": 135,
                      "name": "idToVideo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2643:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Video_$44_storage_$",
                        "typeString": "mapping(uint256 => struct StakeTube.Video storage ref)"
                      }
                    },
                    "id": 137,
                    "indexExpression": {
                      "id": 136,
                      "name": "_videoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "2653:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2643:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Video_$44_storage",
                      "typeString": "struct StakeTube.Video storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2619:43:1"
                },
                {
                  "assignments": [
                    140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "creator",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "2672:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 139,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2672:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "expression": {
                      "id": 141,
                      "name": "myVideo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2698:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                        "typeString": "struct StakeTube.Video storage pointer"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "creator",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43,
                    "src": "2698:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2672:41:1"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "myVideoId",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "2723:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2723:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "expression": {
                      "id": 146,
                      "name": "myVideo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2740:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                        "typeString": "struct StakeTube.Video storage pointer"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "videoId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37,
                    "src": "2740:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2723:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2787:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2787:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2799:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2787:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207469702073686f756c64206265206e6f6e2d7a65726f2e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2815:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca9caeec87746d4c246a1bf4d4b14844108ebfd6d490f11dc171bb39d08df3bd",
                          "typeString": "literal_string \"The tip should be non-zero.\""
                        },
                        "value": "The tip should be non-zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca9caeec87746d4c246a1bf4d4b14844108ebfd6d490f11dc171bb39d08df3bd",
                          "typeString": "literal_string \"The tip should be non-zero.\""
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2766:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:88:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2766:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2886:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2886:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 160,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2886:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726561746f72206f662074686520766964656f2063616e6e6f7420746970207468656d73656c76657321",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2921:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6473f2bb1aa42b8b35a27ad1e569df6eb944573db9e2fc25acb775c46d5abc0",
                          "typeString": "literal_string \"Creator of the video cannot tip themselves!\""
                        },
                        "value": "Creator of the video cannot tip themselves!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6473f2bb1aa42b8b35a27ad1e569df6eb944573db9e2fc25acb775c46d5abc0",
                          "typeString": "literal_string \"Creator of the video cannot tip themselves!\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2865:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:111:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "_videoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "3131:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "addTipper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3121:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:19:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3297:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3297:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 169,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3280:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3280:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3280:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "3280:27:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 177,
                        "name": "myVideoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "3329:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 178,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3340:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3349:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3349:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 176,
                      "name": "tipped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "3322:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable,address payable)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3322:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "EmitStatement",
                  "src": "3317:43:1"
                }
              ]
            },
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "2369:193:1",
              "text": "@notice Function for tipping the creator of the video\n @param _videoId Id of the video\n @dev CAUTION Currently it is taking the index of array, to be modified to take video Id"
            },
            "functionSelector": "e8b69bc3",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_videoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "2580:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:15:1"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:0:1"
            },
            "scope": 185,
            "src": "2567:800:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 186,
        "src": "390:2980:1"
      }
    ],
    "src": "39:3331:1"
  },
  "legacyAST": {
    "absolutePath": "/home/versilio/VERSILIO/Techworks/Blockchain/Stake-Tube/st-artist/contracts/StakeTube.sol",
    "exportedSymbols": {
      "StakeTube": [
        185
      ]
    },
    "id": 186,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35,
          "nodeType": "StructuredDocumentation",
          "src": "64:326:1",
          "text": "@title Attention economy for videos\n @author Aniket Parate\n @notice Contract implementing direct and complete payment to the artist as well as adding videos\n @dev Current implementation just consists of tipping and distribution of the tips.\n @dev Later Implementations include: NFTs, Streaming, Bulk transfers"
        },
        "fullyImplemented": true,
        "id": 185,
        "linearizedBaseContracts": [
          185
        ],
        "name": "StakeTube",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "StakeTube.Video",
            "id": 44,
            "members": [
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "videoId",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "567:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "567:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "589:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 38,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "610:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 40,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "610:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "creator",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "638:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 42,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Video",
            "nodeType": "StructDefinition",
            "scope": 185,
            "src": "545:183:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 45,
              "nodeType": "StructuredDocumentation",
              "src": "734:52:1",
              "text": "@notice total number of videos stored currently."
            },
            "functionSelector": "e230a208",
            "id": 47,
            "mutability": "mutable",
            "name": "totalVideos",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "791:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "791:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 48,
              "nodeType": "StructuredDocumentation",
              "src": "821:74:1",
              "text": "@notice Mapping from video id to the video struct stored on blockchain"
            },
            "functionSelector": "cd544f64",
            "id": 52,
            "mutability": "mutable",
            "name": "idToVideo",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "900:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Video_$44_storage_$",
              "typeString": "mapping(uint256 => struct StakeTube.Video)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "909:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "900:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Video_$44_storage_$",
                "typeString": "mapping(uint256 => struct StakeTube.Video)"
              },
              "valueType": {
                "id": 50,
                "name": "Video",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 44,
                "src": "917:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                  "typeString": "struct StakeTube.Video"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "947:272:1",
              "text": "@notice Mapping from Video id to tippers array\n @dev A different mapping is created because if it would have been stored in an array as earlier, \n @dev then everytime the complete video object would have been needed to be fetched which would be expensive"
            },
            "functionSelector": "b60bebb9",
            "id": 58,
            "mutability": "mutable",
            "name": "idToTippers",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "1224:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_payable_$dyn_storage_$",
              "typeString": "mapping(uint256 => address payable[])"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 54,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1233:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1224:35:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_payable_$dyn_storage_$",
                "typeString": "mapping(uint256 => address payable[])"
              },
              "valueType": {
                "baseType": {
                  "id": 55,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1241:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "id": 56,
                "nodeType": "ArrayTypeName",
                "src": "1241:17:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                  "typeString": "address payable[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "1285:61:1",
              "text": "@notice Event emitted after video is added using addVideo"
            },
            "id": 65,
            "name": "videoAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "videoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1377:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1399:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1367:61:1"
            },
            "src": "1351:78:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "1435:44:1",
              "text": "@notice Event after the amount is tipped"
            },
            "id": 74,
            "name": "tipped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "videoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1506:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1528:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tipper",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1561:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:93:1"
            },
            "src": "1484:106:1"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1854:289:1",
              "statements": [
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1864:13:1",
                    "subExpression": {
                      "id": 82,
                      "name": "totalVideos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1864:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:13:1"
                },
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "_videoId",
                      "nodeType": "VariableDeclaration",
                      "scope": 111,
                      "src": "1887:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1887:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "id": 87,
                    "name": "totalVideos",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "1903:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1887:27:1"
                },
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "video",
                      "nodeType": "VariableDeclaration",
                      "scope": 111,
                      "src": "1924:18:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_memory_ptr",
                        "typeString": "struct StakeTube.Video"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "Video",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44,
                        "src": "1924:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                          "typeString": "struct StakeTube.Video"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 92,
                        "name": "_videoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1964:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 93,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1986:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 94,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2005:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2031:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2031:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 91,
                      "name": "Video",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1945:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Video_$44_storage_ptr_$",
                        "typeString": "type(struct StakeTube.Video storage pointer)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Video_$44_memory_ptr",
                      "typeString": "struct StakeTube.Video memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1924:127:1"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 99,
                        "name": "idToVideo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "2061:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Video_$44_storage_$",
                          "typeString": "mapping(uint256 => struct StakeTube.Video storage ref)"
                        }
                      },
                      "id": 101,
                      "indexExpression": {
                        "id": 100,
                        "name": "_videoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2071:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2061:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_storage",
                        "typeString": "struct StakeTube.Video storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "video",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2083:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_memory_ptr",
                        "typeString": "struct StakeTube.Video memory"
                      }
                    },
                    "src": "2061:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Video_$44_storage",
                      "typeString": "struct StakeTube.Video storage ref"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:27:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 106,
                        "name": "_videoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2114:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2124:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2124:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 105,
                      "name": "videoAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2103:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2103:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "EmitStatement",
                  "src": "2098:37:1"
                }
              ]
            },
            "documentation": {
              "id": 75,
              "nodeType": "StructuredDocumentation",
              "src": "1596:179:1",
              "text": "@dev Adds Video Details to the blockchain\n @dev Add the necessary require statements\n @param _name Name of Video\n @param _description Description of Video"
            },
            "functionSelector": "0dbd9bdc",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addVideo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1798:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1819:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1797:49:1"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1854:0:1"
            },
            "scope": 185,
            "src": "1780:363:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2308:55:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2345:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2345:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 118,
                          "name": "idToTippers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "2318:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_payable_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address payable[] storage ref)"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "id": 119,
                          "name": "_videoId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "2330:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2318:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2318:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2318:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2318:38:1"
                }
              ]
            },
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "2149:112:1",
              "text": "@notice Adding tipper to the corresponding video with given video Id\n @param _videoId Id of the video"
            },
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTipper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_videoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2285:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2284:15:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2308:0:1"
            },
            "scope": 185,
            "src": "2266:97:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "2609:758:1",
              "statements": [
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "myVideo",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "2619:21:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                        "typeString": "struct StakeTube.Video"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "Video",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44,
                        "src": "2619:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                          "typeString": "struct StakeTube.Video"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "baseExpression": {
                      "id": 135,
                      "name": "idToVideo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2643:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Video_$44_storage_$",
                        "typeString": "mapping(uint256 => struct StakeTube.Video storage ref)"
                      }
                    },
                    "id": 137,
                    "indexExpression": {
                      "id": 136,
                      "name": "_videoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "2653:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2643:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Video_$44_storage",
                      "typeString": "struct StakeTube.Video storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2619:43:1"
                },
                {
                  "assignments": [
                    140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "creator",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "2672:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 139,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2672:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "expression": {
                      "id": 141,
                      "name": "myVideo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2698:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                        "typeString": "struct StakeTube.Video storage pointer"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "creator",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43,
                    "src": "2698:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2672:41:1"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "myVideoId",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "2723:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2723:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "expression": {
                      "id": 146,
                      "name": "myVideo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2740:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Video_$44_storage_ptr",
                        "typeString": "struct StakeTube.Video storage pointer"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "videoId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37,
                    "src": "2740:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2723:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2787:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2787:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2799:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2787:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207469702073686f756c64206265206e6f6e2d7a65726f2e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2815:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca9caeec87746d4c246a1bf4d4b14844108ebfd6d490f11dc171bb39d08df3bd",
                          "typeString": "literal_string \"The tip should be non-zero.\""
                        },
                        "value": "The tip should be non-zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca9caeec87746d4c246a1bf4d4b14844108ebfd6d490f11dc171bb39d08df3bd",
                          "typeString": "literal_string \"The tip should be non-zero.\""
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2766:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:88:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2766:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2886:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2886:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 160,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2886:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726561746f72206f662074686520766964656f2063616e6e6f7420746970207468656d73656c76657321",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2921:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6473f2bb1aa42b8b35a27ad1e569df6eb944573db9e2fc25acb775c46d5abc0",
                          "typeString": "literal_string \"Creator of the video cannot tip themselves!\""
                        },
                        "value": "Creator of the video cannot tip themselves!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6473f2bb1aa42b8b35a27ad1e569df6eb944573db9e2fc25acb775c46d5abc0",
                          "typeString": "literal_string \"Creator of the video cannot tip themselves!\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2865:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:111:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "_videoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "3131:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "addTipper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3121:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:19:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3297:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3297:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 169,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3280:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3280:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3280:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "3280:27:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 177,
                        "name": "myVideoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "3329:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 178,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3340:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3349:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3349:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 176,
                      "name": "tipped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "3322:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable,address payable)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3322:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "EmitStatement",
                  "src": "3317:43:1"
                }
              ]
            },
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "2369:193:1",
              "text": "@notice Function for tipping the creator of the video\n @param _videoId Id of the video\n @dev CAUTION Currently it is taking the index of array, to be modified to take video Id"
            },
            "functionSelector": "e8b69bc3",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_videoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "2580:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:15:1"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:0:1"
            },
            "scope": 185,
            "src": "2567:800:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 186,
        "src": "390:2980:1"
      }
    ],
    "src": "39:3331:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x575c04ce1860600eaadeffb7de46bfa696eef7a41f20431cf444a41ede93ebcc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "videoId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address payable",
              "name": "creator",
              "type": "address"
            }
          ],
          "name": "videoAdded",
          "type": "event"
        },
        "0xff4e2c4b5b26e1896ee316ccc4b45ebe98440c57e707da4c11c3354727260f72": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "videoId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address payable",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address payable",
              "name": "tipper",
              "type": "address"
            }
          ],
          "name": "tipped",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x21128462535552AC72db49E967e096a06bd23805",
      "transactionHash": "0x43f3b1694fcb2afd17c312ad647678c5fe37f41d5df9db04fa920abf319feb7a"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-10T13:09:52.890Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Aniket Parate",
    "details": "Current implementation just consists of tipping and distribution of the tips.Later Implementations include: NFTs, Streaming, Bulk transfers",
    "kind": "dev",
    "methods": {
      "addVideo(string,string)": {
        "details": "Adds Video Details to the blockchainAdd the necessary require statements",
        "params": {
          "_description": "Description of Video",
          "_name": "Name of Video"
        }
      },
      "tip(uint256)": {
        "details": "CAUTION Currently it is taking the index of array, to be modified to take video Id",
        "params": {
          "_videoId": "Id of the video"
        }
      }
    },
    "stateVariables": {
      "idToTippers": {
        "details": "A different mapping is created because if it would have been stored in an array as earlier, then everytime the complete video object would have been needed to be fetched which would be expensive"
      }
    },
    "title": "Attention economy for videos",
    "version": 1
  },
  "userdoc": {
    "events": {
      "tipped(uint256,address,address)": {
        "notice": "Event after the amount is tipped"
      },
      "videoAdded(uint256,address)": {
        "notice": "Event emitted after video is added using addVideo"
      }
    },
    "kind": "user",
    "methods": {
      "idToTippers(uint256,uint256)": {
        "notice": "Mapping from Video id to tippers array"
      },
      "idToVideo(uint256)": {
        "notice": "Mapping from video id to the video struct stored on blockchain"
      },
      "tip(uint256)": {
        "notice": "Function for tipping the creator of the video"
      },
      "totalVideos()": {
        "notice": "total number of videos stored currently."
      }
    },
    "notice": "Contract implementing direct and complete payment to the artist as well as adding videos",
    "version": 1
  }
}